#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –æ—Ç –≤—Å–µ—Ö –æ—Ç—á–µ—Ç–æ–≤
"""
import requests
import sys
import time

def clear_all_reports():
    """–û—á–∏—â–∞–µ—Ç –≤—Å–µ –æ—Ç—á–µ—Ç—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üóëÔ∏è –û–ß–ò–°–¢–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• –û–¢ –í–°–ï–• –û–¢–ß–ï–¢–û–í")
    print("=" * 50)
    
    base_url = "http://localhost:8000/api/v1/reports"
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ç—á–µ—Ç–æ–≤
        print("üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ—Ç—á–µ—Ç–æ–≤...")
        response = requests.get(f"{base_url}/")
        
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –æ—Ç—á–µ—Ç–æ–≤: {response.status_code}")
            return False
        
        data = response.json()
        reports = data.get("reports", [])
        total_reports = len(reports)
        
        if total_reports == 0:
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ –ø—É—Å—Ç–∞")
            return True
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {total_reports} –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
        
        # –£–¥–∞–ª—è–µ–º –∫–∞–∂–¥—ã–π –æ—Ç—á–µ—Ç
        deleted_count = 0
        for i, report in enumerate(reports, 1):
            report_id = report["id"]
            filename = report["filename"]
            
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ {i}/{total_reports}: {filename} (ID: {report_id})")
            
            delete_response = requests.delete(f"{base_url}/{report_id}")
            
            if delete_response.status_code == 200:
                deleted_count += 1
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω: {filename}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {filename}: {delete_response.status_code}")
            
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —É–¥–∞–ª–µ–Ω–∏—è–º–∏
            time.sleep(0.1)
        
        print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –û–ß–ò–°–¢–ö–ò:")
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ: {deleted_count} –∏–∑ {total_reports} –æ—Ç—á–µ—Ç–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è...")
        final_response = requests.get(f"{base_url}/")
        if final_response.status_code == 200:
            final_data = final_response.json()
            remaining_reports = len(final_data.get("reports", []))
            print(f"üìã –û—Å—Ç–∞–ª–æ—Å—å –æ—Ç—á–µ—Ç–æ–≤: {remaining_reports}")
            
            if remaining_reports == 0:
                print("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞!")
                return True
            else:
                print(f"‚ö†Ô∏è –û—Å—Ç–∞–ª–∏—Å—å –Ω–µ—É–¥–∞–ª–µ–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã: {remaining_reports}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è: {final_response.status_code}")
            return False
        
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω.")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–ê–ü–£–°–ö –û–ß–ò–°–¢–ö–ò –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    try:
        response = requests.get("http://localhost:8000/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            sys.exit(1)
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã: docker-compose up -d")
        sys.exit(1)
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –æ—á–∏—Å—Ç–∫—É
    success = clear_all_reports()
    
    if success:
        print("\nüéâ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
    else:
        print("\n‚ùå –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –° –û–®–ò–ë–ö–ê–ú–ò!")
        sys.exit(1) 