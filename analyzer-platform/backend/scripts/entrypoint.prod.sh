#!/bin/bash

# ========================================
# Production Entrypoint –¥–ª—è FastAPI Backend
# ========================================

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ Analyzer Platform Backend (Production Mode)"
echo "=================================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
wait_for_db() {
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL..."
    
    while ! nc -z "$POSTGRES_SERVER" "$POSTGRES_PORT" 2>/dev/null; do
        echo "‚è≥ PostgreSQL –µ—â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∂–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã..."
        sleep 2
    done
    
    echo "‚úÖ PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Redis
wait_for_redis() {
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis..."
    
    while ! nc -z "$REDIS_HOST" "$REDIS_PORT" 2>/dev/null; do
        echo "‚è≥ Redis –µ—â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∂–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã..."
        sleep 2
    done
    
    echo "‚úÖ Redis –¥–æ—Å—Ç—É–ø–µ–Ω!"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_directories() {
    echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    
    mkdir -p /app/uploads
    mkdir -p /app/logs
    mkdir -p /app/cache
    mkdir -p /app/temp
    
    echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã!"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
run_migrations() {
    echo "üîÑ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–π
    # python -m alembic upgrade head
    
    echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
check_config() {
    echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if [ -z "$POSTGRES_SERVER" ]; then
        echo "‚ùå POSTGRES_SERVER –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if [ -z "$REDIS_HOST" ]; then
        echo "‚ùå REDIS_HOST –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        exit 1
    fi
    
    if [ -z "$SECRET_KEY" ] || [ "$SECRET_KEY" = "your-super-secret-production-key-change-me" ]; then
        echo "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π SECRET_KEY! –ò–∑–º–µ–Ω–∏—Ç–µ –µ–≥–æ –≤ production!"
    fi
    
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞!"
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
setup_logging() {
    echo "üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è..."
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    touch /app/logs/analyzer-platform.log
    touch /app/logs/access.log
    touch /app/logs/error.log
    
    echo "‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ!"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
main() {
    echo "üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è production –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    check_config
    create_directories
    setup_logging
    wait_for_db
    wait_for_redis
    run_migrations
    
    echo "‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
    exec "$@"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è graceful shutdown
cleanup() {
    echo "üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    kill -TERM "$child" 2>/dev/null
    wait "$child"
    echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    exit 0
}

trap cleanup SIGTERM SIGINT

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" &
child=$!
wait "$child" 