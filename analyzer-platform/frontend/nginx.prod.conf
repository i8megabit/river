# ========================================
# Production Nginx конфигурация для веб-платформы анализатора
# Оптимизирована для CentOS/RHEL продакшен сред
# ========================================

# Количество worker процессов (обычно равно количеству CPU cores)
worker_processes auto;

# PID файл
pid /var/run/nginx.pid;

# События
events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    # Основные настройки
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/analyzer/access.log main;
    error_log /var/log/nginx/analyzer/error.log warn;
    
    # Производительность
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    
    # Размеры буферов
    client_body_buffer_size 128k;
    client_max_body_size 100m;  # Для загрузки больших отчетов
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # Таймауты
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Сжатие
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Безопасность
    server_tokens off;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=5r/s;
    
    # Основной сервер
    server {
        listen 80;
        listen [::]:80;
        server_name localhost _;
        root /usr/share/nginx/html;
        index index.html;
        
        # Логирование для этого сервера
        access_log /var/log/nginx/analyzer/access.log main;
        error_log /var/log/nginx/analyzer/error.log;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Основные статические файлы
        location / {
            try_files $uri $uri/ /index.html;
            
            # Кэширование для статических ресурсов
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Vary Accept-Encoding;
                access_log off;
            }
            
            # Кэширование для HTML файлов
            location ~* \.html$ {
                expires 1h;
                add_header Cache-Control "public, must-revalidate";
            }
        }
        
        # API проксирование к backend с rate limiting
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            limit_req_status 429;
            
            # Проксирование к backend
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Таймауты для API
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Буферизация
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # CORS заголовки
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
            add_header Access-Control-Max-Age 3600;
            
            # Обработка preflight запросов
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # Специальная обработка для загрузки файлов
        location /api/v1/reports/upload {
            limit_req zone=upload burst=5 nodelay;
            
            # Увеличенные лимиты для загрузки файлов
            client_max_body_size 500m;
            client_body_timeout 300s;
            
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Таймауты для загрузки
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Отключаем буферизацию для больших файлов
            proxy_request_buffering off;
        }
        
        # Блокировка доступа к системным файлам
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Блокировка попыток доступа к конфигурационным файлам
        location ~* \.(env|conf|config|ini|yml|yaml)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # HTTPS сервер (раскомментировать для использования SSL)
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name your-domain.com;
    #     root /usr/share/nginx/html;
    #     index index.html;
    #     
    #     # SSL сертификаты
    #     ssl_certificate /etc/nginx/ssl/server.crt;
    #     ssl_certificate_key /etc/nginx/ssl/server.key;
    #     
    #     # SSL настройки
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 1d;
    #     ssl_session_tickets off;
    #     
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=63072000" always;
    #     
    #     # Остальная конфигурация аналогична HTTP серверу
    #     include /etc/nginx/conf.d/common.conf;
    # }
} 