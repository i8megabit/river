#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Ä—Ç–æ–≤
"""

import requests
import json

def test_reports_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –æ—Ç—á–µ—Ç–æ–≤"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –û–¢–ß–ï–¢–û–í")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –æ—Ç—á–µ—Ç–æ–≤
        response = requests.get("http://localhost:8000/api/v1/reports")
        
        if response.status_code == 200:
            data = response.json()
            reports = data.get("reports", [])
            
            print(f"‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω")
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ –æ—Ç—á–µ—Ç–æ–≤: {len(reports)}")
            
            for i, report in enumerate(reports, 1):
                print(f"\nüìã –û—Ç—á–µ—Ç {i}:")
                print(f"   üñ•Ô∏è Hostname: {report.get('hostname', 'N/A')}")
                print(f"   üîó –°–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {report.get('total_connections', 0)}")
                print(f"   üö™ TCP –ø–æ—Ä—Ç—ã: {report.get('tcp_ports_count', 0)}")
                print(f"   üö™ UDP –ø–æ—Ä—Ç—ã: {report.get('udp_ports_count', 0)}")
                print(f"   üìä –í—Å–µ–≥–æ –ø–æ—Ä—Ç–æ–≤: {(report.get('tcp_ports_count', 0) or 0) + (report.get('udp_ports_count', 0) or 0)}")
                print(f"   üìÖ –î–∞—Ç–∞: {report.get('generated_at', 'N/A')}")
                print(f"   üíæ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {report.get('file_size', 0)} –±–∞–π—Ç")
                print(f"   üîë ID: {report.get('id', 'N/A')}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—è –ø–æ—Ä—Ç–æ–≤ –Ω–µ None –∏ –Ω–µ –ø—É—Å—Ç—ã–µ
                tcp_count = report.get('tcp_ports_count')
                udp_count = report.get('udp_ports_count')
                
                if tcp_count is None:
                    print(f"   ‚ö†Ô∏è tcp_ports_count is None")
                if udp_count is None:
                    print(f"   ‚ö†Ô∏è udp_ports_count is None")
                    
                if tcp_count == 0 and udp_count == 0:
                    print(f"   ‚ö†Ô∏è –û–±–∞ —Å—á–µ—Ç—á–∏–∫–∞ –ø–æ—Ä—Ç–æ–≤ —Ä–∞–≤–Ω—ã 0")
        else:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API: {e}")

def test_frontend():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥"""
    print("\nüåê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–†–û–ù–¢–ï–ù–î–ê")
    print("=" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
        response = requests.get("http://localhost:3000")
        
        if response.status_code == 200:
            print(f"‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º JavaScript —Ñ–∞–π–ª
            js_response = requests.get("http://localhost:3000/js/app.js")
            if js_response.status_code == 200:
                js_content = js_response.text
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–¥–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Ä—Ç–æ–≤
                if "tcp_ports_count" in js_content and "udp_ports_count" in js_content:
                    print(f"‚úÖ JavaScript —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Ä—Ç–æ–≤")
                else:
                    print(f"‚ùå JavaScript –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Ä—Ç–æ–≤")
                    
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º—É–ª—É —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Ä—Ç–æ–≤
                if "(report.tcp_ports_count || 0) + (report.udp_ports_count || 0)" in js_content:
                    print(f"‚úÖ –§–æ—Ä–º—É–ª–∞ —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Ä—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–∞")
                else:
                    print(f"‚ùå –§–æ—Ä–º—É–ª–∞ —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Ä—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            else:
                print(f"‚ùå JavaScript —Ñ–∞–π–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {js_response.status_code}")
        else:
            print(f"‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: {e}")

if __name__ == "__main__":
    test_reports_api()
    test_frontend()
    
    print("\n" + "=" * 50)
    print("üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000 –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("2. –û—Ç–∫—Ä–æ–π—Ç–µ Developer Tools (F12)")
    print("3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É Console")
    print("4. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É (F5)")
    print("5. –ù–∞–π–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è 'üì° –î–∞–Ω–Ω—ã–µ –æ—Ç API:' –∏ 'üîç –û—Ç–ª–∞–¥–∫–∞ –ø–æ—Ä—Ç–æ–≤ –≤ –æ—Ç—á–µ—Ç–∞—Ö:'")
    print("6. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ tcp_ports_count –∏ udp_ports_count –Ω–µ —Ä–∞–≤–Ω—ã 0")
    print("=" * 50) 